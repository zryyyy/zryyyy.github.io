[{"title":"Markdown基本语法","url":"/2020/04/25/Markdown基本语法/","content":"\n# Markdown基本语法\n\nMarkdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式\n\n**优点：**\n1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作\n2、操作简单，比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可\n\n**缺点：**\n1、需要记一些语法（但是很简单五分钟就能学会）\n2、有些平台不支持Markdown编辑模式\n\n\n\n# 一、标题\n\n在想要设置为标题的文字前面加#来表示\n一个#是一级标题，二个#是二级标题，以此类推共支持六级标题\n\n*注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行*\n\n示例：\n\n```bash\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n效果：\n\n# 这是一级标题\n\n## 这是二级标题\n\n### 这是三级标题\n\n#### 这是四级标题\n\n##### 这是五级标题\n\n###### 这是六级标题\n\n------\n\n\n\n# 二、字体\n\n- ##### 加粗\n\n要加粗的文字左右分别用两个*号包起来\n\n- ##### 斜体\n\n要倾斜的文字左右分别用一个*号包起来\n\n- ##### 斜体加粗\n\n要倾斜和加粗的文字左右分别用三个*号包起来\n\n- ##### 删除线\n\n要加删除线的文字左右分别用两个~~号包起来\n\n示例：\n\n```undefined\n**这是加粗的文字**\n*这是倾斜的文字*`\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n```\n\n效果：\n\n**这是加粗的文字**\n*这是倾斜的文字*\n***这是斜体加粗的文字\\***\n~~这是加删除线的文字~~\n\n------\n\n\n\n# 三、引用\n\n在引用的文字前加>即可，引用也可以嵌套，如加两个>>三个>>>\nn个...\n貌似可以一直加下去，但没神马卵用\n\n示例：\n\n```ruby\n>这是引用的内容\n>>这是引用的内容\n>>>>>>>>>>这是引用的内容\n```\n\n效果：\n\n> 这是引用的内容\n>\n> > 这是引用的内容\n> >\n> > > > > > > > > > 这是引用的内容\n\n\n\n# 四、分割线\n\n三个或者三个以上的 - 或者 * 都可以\n\n示例：\n\n```undefined\n---\n----\n***\n*****\n```\n\n效果：\n可以看到，显示效果是一样的\n\n------\n\n------\n\n------\n\n------\n\n\n\n# 五、图片\n\n语法：\n\n```bash\n![图片alt](图片地址 ''图片title'')\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加\n```\n\n示例：\n\n```cpp\n![V字仇杀队](https://tse4-mm.cn.bing.net/th/id/OIP.IQqUWNs3ay-Shm9QQzjbRgHaFA?pid=Api&rs=1)\n```\n\n效果：\n\n![V字仇杀队](https://tse4-mm.cn.bing.net/th/id/OIP.IQqUWNs3ay-Shm9QQzjbRgHaFA?pid=Api&rs=1)\n\nmarkdown格式追求的是简单、多平台统一\n\n那么图片存储就需要用图床提供统一的外链，这样才不用在换平台时每次处理图片，才能做到书写一次，各处使用\n\n当然如果想要上传本地的图片也有一些特殊方法，如hexo的图片标签\n\n\n\n\n# 六、超链接\n\n语法：\n\n```csharp\n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n```\n\n示例：\n\n```csharp\n[B站](https://www.bilibili.com/)\n[必应](https://cn.bing.com/)\n```\n\n效果：\n\n[B站](https://www.bilibili.com/)\n[必应](https://cn.bing.com/)\n\n*注：Markdown本身语法不支持链接在新页面中打开，如果想要在新页面中打开的话可以用html语言的a标签代替*\n\n```xml\n<a href=\"超链接地址\" target=\"_blank\">超链接名</a>\n\n示例\n<a href=\"https://zryyyy.github.io/\" target=\"_blank\">Zry's-blog</a>\n```\n\n------\n\n\n\n# 七、列表\n\n##### 无序列表\n\n语法：\n无序列表用 - + * 任何一种都可以\n\n```undefined\n- 列表内容\n+ 列表内容\n* 列表内容\n\n注意：- + * 跟内容之间都要有一个空格\n```\n\n效果：\n\n- 列表内容\n- 列表内容\n- 列表内容\n\n##### 有序列表\n\n语法：\n数字加点\n\n```undefined\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n注意：序号跟内容之间要有空格\n```\n\n效果：\n\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n##### 列表嵌套\n\n**上一级和下一级之间敲三个空格即可**\n\n- 一级无序列表内容\n  - 二级无序列表内容\n  - 二级无序列表内容\n  - 二级无序列表内容\n- 一级无序列表内容\n  1. 二级有序列表内容\n  2. 二级有序列表内容\n  3. 二级有序列表内容\n\n1. 一级有序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n2. 一级有序列表内容\n   1. 二级有序列表内容\n   2. 二级有序列表内容\n   3. 二级有序列表内容\n\n------\n\n\n\n# 八、表格\n\n语法：\n\n```ruby\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来，此处省略\n```\n\n示例：\n\n```ruby\n示例|示例|示例\n--|:--:|--:\n示例|示例|示例\n示例|示例|示例\n示例|示例|示例\n```\n\n效果：\n\n| 示例 | 示例 | 示例 |\n| ---- | :--: | ---: |\n| 示例 |  示例  | 示例 |\n| 示例 |  示例  | 示例 |\n| 示例 |  示例  | 示例 |\n\n\n\n# 九、代码\n\n语法：\n\n单行代码：代码之间分别用一个反引号包起来\n\n```go\n    `代码内容`\n```\n\n效果：\n\n`代码内容`\n\n\n\n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\n\n```go\n(```)\n  代码...\n  代码...\n  代码...\n(```)\n```\n\n> *注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可*\n\n效果：\n\n```\n  代码...\n  代码...\n  代码...\n```\n\n\n\n# 十、流程图\n\n语法：\n~~~php\n```flow\nst=>start: 开始\nop=>operation: My Operation\ncond=>condition: Yes or No?\ne=>end\nst->op->cond\ncond(yes)->e\ncond(no)->op\n&```\n~~~\n\n效果如下：\n\n```flow\nst=>start: 开始\nop=>operation: My Operation\ncond=>condition: Yes or No?\ne=>end\nst->op->cond\ncond(yes)->e\ncond(no)->op\n&```\n```","categories":["建站"]},{"title":"使用hexo搭建个人博客的教程","url":"/2020/04/12/使用hexo搭建个人博客的教程/","content":"\n这篇博客是我个人使用hexo框架和GitHub、coding（或者使用码云gitee）搭建博客的一些经验🌚\n\n可能有一些疏漏请大佬指正🌚🌞\n\n超长文警告🤨❗❗❗\n\n下面这张图是总体的部署思路\n\n{% asset_img 1.jpg 来自酷安大佬@rainy_king_solo %}\n\n## Quick Start\n\n### 准备阶段\n\n#### 安装Node.js\n下载地址：[传送门](https://nodejs.org/en/) 去 NodeJs 官网下载相应版本，进行安装。 可以通过node -v的命令来测试NodeJS是否安装成功(同时按win+R输入cmd按回车在打开的界面输入下面的代码)\n\n```cmd\nnode -v\n```\n\n#### 安装Git\n下载地址：[传送门](https://git-scm.com/) 去 Git 官网下载相应版本，进行安装。（无脑next即可）可以在cmd输入的命令来测试git是否安装成功\n```cmd\ngit -version\n```\n\n#### 配置SSH key\n\n在C:\\Users\\【你的用户名】目录下右键单击选择Git Bash Here，在命令行中输入\n\n```Git\nssh-keygen -t rsa -C \"【你注册GitHub的邮箱】\"\n```\n\n 成功后会在.ssh文件夹生成id_rsa 以及id_rsa.pub，打开id_rsa.pub(如果没有文本编辑器可以使用记事本打开)，将文件里的所有字符复制。\n\n#### 添加SSH Key\n\n##### GitHub\n\n登陆GitHub在任意界面右上角，点击你的头像，选择Settings-> SSH keys->New SSH key，Title相当于一个备注可以随便输，然后在Key中把刚刚复制的SSH Key粘贴进去，点击Add SSH Key即可\n\n##### Coding(腾讯码市)\n\n登陆Coding在任意界面右上角，点击你的头像，选择个人设置->SSH公钥->新增公钥，在公钥内容中粘贴刚刚复制的内容点击添加即可\n\n##### Gitee（阿里码云）\n\n登陆Gitee在任意界面右上角，点击你的头像，选择设置->安全设置->SSH公钥，在公钥内容中粘贴刚刚复制的内容点击确定即可\n\n#### 安装Hexo\n##### 安装\n\n在用户目录（C:\\Users\\【你的用户名】）新建一个Blog文件夹，文件右键，选择Git Bash Here，在命令行输入下面的代码\n\n```Git\nnpm install -g hexo\n```\n\n等安装完毕，通过输入hexo的命令来测试Hexo是否安装成功，成功如下图展示：\n\n{% asset_img text-hexo.png 成功界面 %}\n\n##### 初始化Hexo\n\n```Git\nhexo init hexo\n```\n\n初始化成功后，会显示Start blogging with Hexo!\n\n这时在你刚才创建的Blog里面会多出一个hexo文件夹\n\n##### 安装依赖文件以及部署形成文件\n\n先输入\n\n```Git\ncd hexo\n```\n\n安装依赖文件，输入\n\n```Git\nnpm install\n```\n\n部署形成文件，输入\n\n```Git\nhexo generate\n```\n\n#### 本地测试Hexo\n\n输入\n\n```Git\nhexo server\n```\n\n或者\n\n\n```\nhexo s\n```\n\n此时提示Hexo is running at [http://loalhost:4000/](http://loalhost:4000/). \n\n接着我们打开浏览器，输入[http://localhost:4000/](http://localhost:4000/)便可看到默认的博客\n\n此时Hexo已经安装完了\n\n------\n\n### 创建代码仓库\n\n#### GitHub\n\n##### 配置githubPage\n\n登录Github，点击”New repository”来新建一个版本库\n\n输入仓库名：你的Github名称.github.io，然后点击Create repository\n\n**注意：创建的仓库名字必须用的github的用户名，因为GithubPage你的用户名作为仓库名才能激活**\n\n##### 启用GitHub Page\n\n点击右边的“Setting”菜单进入设置,点击”Launch automatic page generator”\n\n进入之后点击底部的”Continue to layouts”\n\n试着打开自己在github的静态网址比如我的[https://zryyyy.github.io](https://zryyyy.github.io/)，你会发现打开是你自己刚才选择静态站点模版\n\n##### 将本地hexo项目托管到Github\n\n打开hexo根目录下的配置文件_config.yml\n\n编辑最后面的deploy属性，加入代码：\n\n```_config.yml\ndeploy:\n  type: git\n  repository: git@github.com:zryyyy/zryyyy.github.io.git\n  branch: master\n```\n\n*注：*\n\n*type使用是git*\n*repository属性改成你的刚才创建仓库git地址*\n*分支branch填写master*\n\n#### Coding\n\n##### 配置Coding Page\n\n登陆Coding，点击”所有项目“然后点击“新建项目”\n\n点击“DevOps 项目”\n\n项目名称项目标识都填自己的用户名\n\n勾选“启用README.md 文件初始化项目”\n\n点击“完成创建”后进入创建的仓库\n\n点击“持续部署”->“静态网站”->“新建静态网站”->“保存”\n\n*注：如果没有实名认证应该需要先实名认证一下*\n\n##### 将本地hexo项目托管到Coding\n\n打开hexo根目录下的配置文件_config.yml\n\n编辑最后面的deploy属性，加入代码：\n\n```_config.yml\ndeploy:\n  type: git\n  repository: git@e.coding.net:zryyyy/zryyyy.git\n  branch: master\n```\n\n*注：*\n\n*type使用是git*\n*repository属性改成你的刚才创建仓库git地址*\n*分支branch填写master*\n\n#### Gitee\n\n##### 配置Gitee Page\n\n登陆Gitee，点击上方的”+“->”新建仓库“\n\n输入项目名称\n\n归属路径使用账号\n\n最后点击“创建”\n\n##### 将本地hexo项目托管到Gitee\n\n打开hexo根目录下的配置文件_config.yml\n\n编辑最后面的deploy属性，加入代码：\n\n```_config.yml\ndeploy:\n  type: git\n  repository: htttps://gitee.com/zryyyy/zryyyy.git\n  branch: master\n```\n\n*注：*\n\n*type使用是git*\n*repository属性改成你的刚才创建仓库git地址*\n*分支branch填写master*\n\n#### 部署到代码仓库\n\n##### 安装hexo-deployer-git插件\n\n在hexo根目录右键选择Git Bash Here，输入命令\n\n```Git\nnpm install hexo-deployer-git --save \n```\n\n安装自动部署发布工具\n\n输入命令\n\n```Git\nhexo clean\nhexo g\nhexo d\n```\n\nhexo clean 作用是清除编译的部署文件每次在对博客选项（如主题）修改后都要执行这个操作不然会导致进行的修改不生效\n\nhexo g 作用是编译部署文件\n\nhexo s 作用是本地预览，如果确定博客内容没有问题可以跳过，但是一般建议还是先在本地预览一下\n\nhexo d 作用是将生成的部署文件使用SSH或者https推送到代码仓库\n\nhexo支持使用&&连接两个命令所以也可以直接输入\n\n```Git\nhexo clean && hexo g && hexo d \n```\n\n发布博客，首次发布可能需要在shell中输入账号和密码\n\n#### 注意事项\n\n1. _config.yml文件中的冒号后面一定要有空格，否则不能正确识别，建议不要用记事本打开因为可能会出现一些不知道的错误，我使用的是lighttable\n2. 如果要同时部署到多个代码仓库，需要在每个type前面的两个空格中的第一个空格改成-比如下面的代码所示\n\n```_config.yml\ndeploy:\n- type: git\n  repository: git@github.com:zryyyy/zryyyy.github.io.git\n  branch: master\n- type: git\n  repository: git@e.coding.net:zryyyy/zryyyy.git\n  branch: master\n```\n\n3. _config.yml中基本的配置选项，根据自己需要修改\n\n```_config.yml\n#因为hexo的版本不同，可能有些参数会发生变化\n\n# Site\ntitle: Zry's blog    #网站的标题\nsubtitle: ''         #副标题\ndescription: ''      #描述\nauthor: Zry          #作者信息\nlanguage: zh-CN      #语言（zh-CN为中文简体）\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: stun          #要应用的主题名\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n- type: git          #部署环境一般写的都是git\n  repository: git@github.com:zryyyy/zryyyy.github.io.git\n                     #git的仓库地址，替换成用户名即可\n  branch: master     #分支名称，默认为master\n- type: git\n  repository: git@e.coding.net:zryyyy/zryyyy.git\n  branch: master\n```\n\n4. 每在对博客文件修改后必须执行 hexo clean和hexo g以后才能执行hexo d进行部署\n\n5. 部署完后在浏览器输入自己的博客地址就可以看到刚刚部署的博客了，下面是我的博客地址\n\n   [腾讯云域名国内外分流(推荐)](https://www.zryyyy.xyz/)\n\n   [Coding](https://nx4e7k.coding-pages.com/)\n\n   [GitHub](https://zryyyy.github.io/)\n\n6. 更多的配置帮助在[hexo官方文档](https://hexo.io/zh-cn/docs/)有更详细的描述\n\n------\n\n### 使用hexo写作\n\n#### 生成新文章\n\nhexo根目录下右键单击选择Git Bash Here，输入\n\n```Git\nhexo new [layout] <title>\n```\n\nlayout为文章的布局，默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局\n\ntitle为文章标题，可自己命名\n\n在输入时不用加上[]和<>\n\n执行完后会在`hexo\\source\\_posts`目录生成以刚刚输入的题目为文件名的.md文件\n\n#### Markdown写作\n\nhexo原生支持Markdown，所以文件为.md，可以用支持Markdown的编辑器进行写作，下面是比较好用的Markdown编辑器\n\n- [Typora](https://www.typora.io/)是我平时写作使用的编辑器😏，完全免费，支持 Windows、OS X 和 Linux，支持即时渲染技术，这也是与其他 Markdown 编辑器最显著的区别，支持数学编辑，可与 Word 直接格式转换，在 Pandoc 的支持下进行多种文档格式转换，Typora 适合那些对码字手速和排版顺畅度有要求的人群，而且对小白友好不懂Markdown的也可以轻松上手\n- [Visual Studio Code](https://code.visualstudio.com/) 这是众所周知的神器，是微软推出一款轻量级的文本编辑工具，类似于 Sublime，默认集成 Markdown 文档编辑插件，原生支持高亮 Markdown 的语法，但想要实时预览还需要选择 Markdown: Open Preview to the Side 命令实现，相关教程请[点击此处](https://www.cnblogs.com/shawWey/p/8931697.html)\n- [Marxico](https://maxiang.io/) 中文名马克飞象，提供桌面客户端以及离线 Chrome App，支持移动端 Web，可以直接把文本存到印象笔记，缺点是不免费，[点击此处](https://link.zhihu.com/?target=http%3A//marxi.co/)访问 Marxico国际版\n- [Sublime Text](https://www.sublimetext.com/)  是基于 Vim 开发的跨平台代码编辑器收费80美元，可以免费试用，支持 OS X、Windows、Ubuntu 等 UNIX 及 Linux 操作系统，由于其功能的多样性而广受好评，界面简约大方，定位专业，原生支持的编程语言就多达十几种，通过第三方插件，还能实现更多语法的支持，其中就包括 Markdown ，但缺点不能实时预览，不过用户可以通过 Markdown Preview 的插件实现对 Markdown 的预览，具体教程请[点击此处](https://blog.csdn.net/qazxswed807/article/details/51235792)查看\n\n\n\n差不多就先写这么多吧，下次可能随缘更新😗😘","categories":["建站"]},{"title":"Hello World","url":"/2020/03/29/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]